use crate::util::tok::Tok;
use lalrpop_util::ErrorRecovery;

#[LALR]
grammar<'input, 'e>(errors: &'e mut Vec<ErrorRecovery<usize, Tok<'input>, &'static str>>);

extern {
    type Location = usize;
    enum Tok<'input> {
        "(" => Tok::LParen,
        ")" => Tok::RParen,
        "+" => Tok::Plus,
        "-" => Tok::Minus,
        "/" => Tok::Div,
        Num => Tok::Num(<i32>)
    }
}

SkipExtraTokens: () = {
    => (),
    <!> => errors.push(<>),
};

pub Expr: ()  = {
    Num => (),
    "+" Expr => (),
    Paren,
    ! => {
        errors.push(<>);
    }
};

Paren: ()  = {
    "(" Expr ")" => (),
};
